{"ast":null,"code":"import _classCallCheck from \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/src/App.js\";\n// import Dashboard from \"./Section/Dashboard/Dashboard\";\n// import Infobar from \"./Section/infobar/Infobar\";\nimport React, { Component } from \"react\"; // import Title from \"./Section/titlebar/Titlebar\";\n\nimport \"./App.css\";\nimport DashboardPage from \"./DashboardPage/DashboardPage\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //   constructor() {\n    //     super();\n    //     this.state = {\n    //       coin: [],\n    //       error: null,\n    //       coinlist: true\n    //     };\n    //   }\n    //   componentDidMount() {\n    //     fetch(\"https://api.coinmarketcap.com/v1/ticker/?convert=USD&limit=15\")\n    //       .then(res => res.json())\n    //       .then(\n    //         result => {\n    //           this.setState({\n    //             coin: result,\n    //             coinlist: true\n    //           });\n    //         },\n    //         error => {\n    //           this.setState({\n    //             error,\n    //             coinlist: false\n    //           });\n    //         }\n    //       );\n    //   }\n    value: function render() {\n      //   let coins = null;\n      //   const formatter = new Intl.NumberFormat('en-US', {\n      //     style: 'currency',\n      //     currency: 'USD',\n      //     minimumFractionDigits: 0\n      //   })\n      //   if (this.state.error) {\n      //     return <div>Error: {this.state.error.message}</div>;\n      //   } else if (this.state.coinlist) {\n      //     coins = (\n      //       <div>\n      //         <section className=\"titlebar\">\n      //         <Title />\n      //         </section>\n      //         <section className=\"infobar\">\n      //           <Infobar />\n      //         </section>\n      //         <section className=\"Dashboard\">\n      //         <h1>Real Time Top {this.state.coin.length} Cryptocurrencies List</h1>\n      //           <section className=\"apptitle\">\n      //             <p className=\"apprank\">Rank</p>\n      //             <p className=\"appname\">Name</p>\n      //             <p className=\"appmarketcap\">Marketcap</p>\n      //             <p className=\"appprice\">Price</p>\n      //             <p className=\"appchange\">(24h) Change</p>\n      //             <p className=\"appvol\">(24h) Volume</p>\n      //             <p className=\"appsupply\">Current Supply</p>\n      //             <p className=\"appmaxsupply\">Max Supply</p>\n      //           </section>\n      //           {this.state.coin.map((coin, index) => {\n      //             return (\n      //               <Dashboard\n      //                 key={coin.id}\n      //                 rank={coin.rank}\n      //                 name={coin.name}\n      //                 marketcap={formatter.format(Math.round(coin.market_cap_usd))}\n      //                 price={\"$\" + Math.round((coin.price_usd)*100)/100}\n      //                 change={coin.percent_change_24h + \"%\"}\n      //                 vol={formatter.format(Math.round(coin[\"24h_volume_usd\"]))}\n      //                 supply={Math.round(coin.total_supply) + coin.symbol}\n      //                 maxsupply={Math.round(coin.max_supply) + coin.symbol}\n      //               />\n      //             );\n      //           })}\n      //         </section>\n      //       </div>\n      //     );\n      //   }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(DashboardPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })) // <div className=\"App\">\n      // {coins}\n      // </div>;\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yukwachoi/Desktop/CoinOcean/coin-ocean/src/App.js"],"names":["React","Component","DashboardPage","App"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;IAEMC,G;;;;;;;;;;;;;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAGW;AACT;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAIE;AACF;AACA;AANA;AASD;;;;EA/FeF,S;;AAkGlB,eAAeE,GAAf","sourcesContent":["// import Dashboard from \"./Section/Dashboard/Dashboard\";\n// import Infobar from \"./Section/infobar/Infobar\";\nimport React, { Component } from \"react\";\n// import Title from \"./Section/titlebar/Titlebar\";\nimport \"./App.css\";\nimport DashboardPage from \"./DashboardPage/DashboardPage\"\n\nclass App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       coin: [],\n//       error: null,\n//       coinlist: true\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://api.coinmarketcap.com/v1/ticker/?convert=USD&limit=15\")\n//       .then(res => res.json())\n//       .then(\n//         result => {\n//           this.setState({\n//             coin: result,\n//             coinlist: true\n//           });\n//         },\n\n//         error => {\n//           this.setState({\n//             error,\n//             coinlist: false\n//           });\n//         }\n//       );\n//   }\n\n\n  render() {\n  //   let coins = null;\n\n  //   const formatter = new Intl.NumberFormat('en-US', {\n  //     style: 'currency',\n  //     currency: 'USD',\n  //     minimumFractionDigits: 0\n  //   })\n\n  //   if (this.state.error) {\n  //     return <div>Error: {this.state.error.message}</div>;\n  //   } else if (this.state.coinlist) {\n  //     coins = (\n  //       <div>\n  //         <section className=\"titlebar\">\n  //         <Title />\n  //         </section>\n  //         <section className=\"infobar\">\n  //           <Infobar />\n  //         </section>\n  //         <section className=\"Dashboard\">\n  //         <h1>Real Time Top {this.state.coin.length} Cryptocurrencies List</h1>\n  //           <section className=\"apptitle\">\n  //             <p className=\"apprank\">Rank</p>\n  //             <p className=\"appname\">Name</p>\n  //             <p className=\"appmarketcap\">Marketcap</p>\n  //             <p className=\"appprice\">Price</p>\n  //             <p className=\"appchange\">(24h) Change</p>\n  //             <p className=\"appvol\">(24h) Volume</p>\n  //             <p className=\"appsupply\">Current Supply</p>\n  //             <p className=\"appmaxsupply\">Max Supply</p>\n  //           </section>\n\n          \n  //           {this.state.coin.map((coin, index) => {\n  //             return (\n  //               <Dashboard\n  //                 key={coin.id}\n  //                 rank={coin.rank}\n  //                 name={coin.name}\n  //                 marketcap={formatter.format(Math.round(coin.market_cap_usd))}\n  //                 price={\"$\" + Math.round((coin.price_usd)*100)/100}\n  //                 change={coin.percent_change_24h + \"%\"}\n  //                 vol={formatter.format(Math.round(coin[\"24h_volume_usd\"]))}\n  //                 supply={Math.round(coin.total_supply) + coin.symbol}\n  //                 maxsupply={Math.round(coin.max_supply) + coin.symbol}\n  //               />\n  //             );\n  //           })}\n            \n  //         </section>\n  //       </div>\n  //     );\n  //   }\n\n    return (\n      <div>\n        <DashboardPage />\n      </div>\n      // <div className=\"App\">\n    // {coins}\n    // </div>;\n    )\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}