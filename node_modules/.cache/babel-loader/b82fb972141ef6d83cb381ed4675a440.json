{"ast":null,"code":"import _classCallCheck from \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/src/coinPage/Section/indivcoincard.js\";\nimport \"../coinPage.css\";\nimport React, { Component } from \"react\";\n\nvar Ind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Ind, _Component);\n\n  function Ind() {\n    var _this;\n\n    _classCallCheck(this, Ind);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Ind).call(this));\n    _this.state = {\n      coin: [],\n      error: null,\n      coinlist: true\n    };\n    return _this;\n  }\n\n  _createClass(Ind, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.coinmarketcap.com/v1/ticker/?convert=USD&limit=15\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          coin: result,\n          coinlist: true\n        });\n      }, function (error) {\n        _this2.setState({\n          error: error,\n          coinlist: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Error: \", this.state.error.message);\n      } else if (this.state.coinlist) {\n        coins = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"section\", {\n          className: \"titlebar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })), React.createElement(\"section\", {\n          className: \"infobar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Infobar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        })), React.createElement(\"section\", {\n          className: \"Dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Real Time Top \", this.state.coin.length, \" Cryptocurrencies List\"), React.createElement(\"section\", {\n          className: \"apptitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"apprank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Rank\"), React.createElement(\"p\", {\n          className: \"appname\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"p\", {\n          className: \"appmarketcap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Marketcap\"), React.createElement(\"p\", {\n          className: \"appprice\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"p\", {\n          className: \"appchange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"(24h) Change\"), React.createElement(\"p\", {\n          className: \"appvol\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"(24h) Volume\"), React.createElement(\"p\", {\n          className: \"appsupply\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Current Supply\"), React.createElement(\"p\", {\n          className: \"appmaxsupply\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Max Supply\")), this.state.coin.map(function (coin, index) {\n          return React.createElement(Dashboard, {\n            key: coin.id,\n            rank: coin.rank,\n            name: coin.name,\n            marketcap: formatter.format(Math.round(coin.market_cap_usd)),\n            price: \"$\" + Math.round(coin.price_usd * 100) / 100,\n            change: coin.percent_change_24h + \"%\",\n            vol: formatter.format(Math.round(coin[\"24h_volume_usd\"])),\n            supply: Math.round(coin.total_supply) + coin.symbol,\n            maxsupply: Math.round(coin.max_supply) + coin.symbol,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"indivcoin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"(icon) \", this.state.coin[0].name, \"  \", this.state.coin[0].symbol), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Latest Price:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.coin[0].price_usd, \" \", this.state.coin[0].percent_change_1h), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.coin[0].price_btc), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"MarketCap: \", this.state.coin[0].market_cap_usd), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"(24h)Volume: \", this.state.coin[0][\"24h_volume_usd\"]), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Current Supply: \", this.state.coin[0].total_supply), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Total Supply: \", this.state.coin[0].max_supply));\n    }\n  }]);\n\n  return Ind;\n}(Component);\n\nexport default Ind;","map":{"version":3,"sources":["/Users/yukwachoi/Desktop/EasyMoney/coin-ocean/src/coinPage/Section/indivcoincard.js"],"names":["React","Component","Ind","state","coin","error","coinlist","fetch","then","res","json","result","setState","message","coins","length","map","index","id","rank","name","formatter","format","Math","round","market_cap_usd","price_usd","percent_change_24h","total_supply","symbol","max_supply","percent_change_1h","price_btc"],"mappings":";;;;;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFU;AAOb;;;;wCAEiB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,+DAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAAAG,MAAM,EAAI;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACZR,UAAAA,IAAI,EAAEO,MADM;AAEZL,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OARL,EAUI,UAAAD,KAAK,EAAI;AACP,QAAA,MAAI,CAACO,QAAL,CAAc;AACZP,UAAAA,KAAK,EAALA,KADY;AAEZC,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OAfL;AAiBD;;;6BAEQ;AAEP,UAAI,KAAKH,KAAL,CAAWE,KAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKF,KAAL,CAAWE,KAAX,CAAiBQ,OAA9B,CAAP;AACD,OAFH,MAES,IAAI,KAAKV,KAAL,CAAWG,QAAf,EAAyB;AAC9BQ,QAAAA,KAAK,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAS,UAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF,EAIE;AAAS,UAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJF,EAOE;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAmB,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,MAAnC,2BADA,EAEE;AAAS,UAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,EAME;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,EAOE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,EAQE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,CAFF,EAcG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAoB,UAACZ,IAAD,EAAOa,KAAP,EAAiB;AACpC,iBACE,oBAAC,SAAD;AACE,YAAA,GAAG,EAAEb,IAAI,CAACc,EADZ;AAEE,YAAA,IAAI,EAAEd,IAAI,CAACe,IAFb;AAGE,YAAA,IAAI,EAAEf,IAAI,CAACgB,IAHb;AAIE,YAAA,SAAS,EAAEC,SAAS,CAACC,MAAV,CAAiBC,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAACqB,cAAhB,CAAjB,CAJb;AAKE,YAAA,KAAK,EAAE,MAAMF,IAAI,CAACC,KAAL,CAAYpB,IAAI,CAACsB,SAAN,GAAiB,GAA5B,IAAiC,GALhD;AAME,YAAA,MAAM,EAAEtB,IAAI,CAACuB,kBAAL,GAA0B,GANpC;AAOE,YAAA,GAAG,EAAEN,SAAS,CAACC,MAAV,CAAiBC,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAAC,gBAAD,CAAf,CAAjB,CAPP;AAQE,YAAA,MAAM,EAAEmB,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAACwB,YAAhB,IAAgCxB,IAAI,CAACyB,MAR/C;AASE,YAAA,SAAS,EAAEN,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAAC0B,UAAhB,IAA8B1B,IAAI,CAACyB,MAThD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,SAdA,CAdH,CAPF,CADF;AAyCD;;AAIH,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,KAAK1B,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBgB,IAA9B,QAAsC,KAAKjB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmByB,MAAzD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK1B,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBsB,SAAvB,OAAmC,KAAKvB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmB2B,iBAAtD,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK5B,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmB4B,SAAvB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAe,KAAK7B,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBqB,cAAlC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,KAAKtB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmB,gBAAnB,CAAjB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAoB,KAAKD,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBwB,YAAvC,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkB,KAAKzB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmB0B,UAArC,CATF,CADF;AAaD;;;;EA7Fe7B,S;;AAgGlB,eAAeC,GAAf","sourcesContent":["import \"../coinPage.css\";\nimport React, { Component } from \"react\";\n\nclass Ind extends Component {\n    constructor() {\n        super();\n        this.state = {\n          coin: [],\n          error: null,\n          coinlist: true\n        };\n    }\n\n  componentDidMount() {\n    fetch(\"https://api.coinmarketcap.com/v1/ticker/?convert=USD&limit=15\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            coin: result,\n            coinlist: true\n          });\n        },\n\n        error => {\n          this.setState({\n            error,\n            coinlist: false\n          });\n        }\n      );\n  }\n\n  render() {\n\n    if (this.state.error) {\n        return <div>Error: {this.state.error.message}</div>;\n      } else if (this.state.coinlist) {\n        coins = (\n          <div>\n            <section className=\"titlebar\">\n            <Title />\n            </section>\n            <section className=\"infobar\">\n              <Infobar />\n            </section>\n            <section className=\"Dashboard\">\n            <h1>Real Time Top {this.state.coin.length} Cryptocurrencies List</h1>\n              <section className=\"apptitle\">\n                <p className=\"apprank\">Rank</p>\n                <p className=\"appname\">Name</p>\n                <p className=\"appmarketcap\">Marketcap</p>\n                <p className=\"appprice\">Price</p>\n                <p className=\"appchange\">(24h) Change</p>\n                <p className=\"appvol\">(24h) Volume</p>\n                <p className=\"appsupply\">Current Supply</p>\n                <p className=\"appmaxsupply\">Max Supply</p>\n              </section>\n  \n            \n              {this.state.coin.map((coin, index) => {\n                return (\n                  <Dashboard\n                    key={coin.id}\n                    rank={coin.rank}\n                    name={coin.name}\n                    marketcap={formatter.format(Math.round(coin.market_cap_usd))}\n                    price={\"$\" + Math.round((coin.price_usd)*100)/100}\n                    change={coin.percent_change_24h + \"%\"}\n                    vol={formatter.format(Math.round(coin[\"24h_volume_usd\"]))}\n                    supply={Math.round(coin.total_supply) + coin.symbol}\n                    maxsupply={Math.round(coin.max_supply) + coin.symbol}\n                  />\n                );\n              })}\n              \n            </section>\n          </div>\n        );\n      }\n\n\n\n    return (\n      <div className=\"indivcoin\">\n        <p>(icon) {this.state.coin[0].name}  {this.state.coin[0].symbol}</p>\n        <p>Time</p>\n        <p>Latest Price:</p>\n        <p>{this.state.coin[0].price_usd} {this.state.coin[0].percent_change_1h}</p>\n        <p>{this.state.coin[0].price_btc}</p>\n        <p>MarketCap: {this.state.coin[0].market_cap_usd}</p>\n        <p>(24h)Volume: {this.state.coin[0][\"24h_volume_usd\"]}</p>\n        <p>Current Supply: {this.state.coin[0].total_supply}</p>\n        <p>Total Supply: {this.state.coin[0].max_supply}</p>\n      </div>\n    );\n  }\n}\n\nexport default Ind;\n"]},"metadata":{},"sourceType":"module"}