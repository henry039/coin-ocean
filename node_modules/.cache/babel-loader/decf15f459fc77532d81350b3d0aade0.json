{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug = require(\"debug\");\n\nvar qs = require(\"qs\");\n\nvar logger = debug('crypto-news-api');\n\nvar generateAPI = function generateAPI(fetch) {\n  var CryptoControlApi = function () {\n    function CryptoControlApi(apikey, proxyURL) {\n      this.sentimentEnabled = false;\n      if (!apikey) throw new Error('No API key found. Register for an API key at https://cryptocontrol.io/apis');\n      this.apikey = apikey;\n      this.proxyURL = proxyURL;\n      logger('using cryptocontrol.io api v1');\n    }\n\n    CryptoControlApi.prototype._fetch = function (url, query) {\n      if (query === void 0) {\n        query = {};\n      }\n\n      query.enableSentiment = this.sentimentEnabled;\n      var queryString = qs.stringify(query);\n      var API_HOST = 'https://cryptocontrol.io/api/v1/public';\n      var HOST = this.proxyURL || API_HOST;\n      return fetch(\"\" + HOST + url + \"?\" + queryString, {\n        headers: {\n          'user-agent': 'CryptoControl Node.js API v2.2.0',\n          'x-api-key': this.apikey\n        }\n      }).then(function (response) {\n        if (response.status === 401) throw new Error('Invalid API Key');\n        if (response.status === 405) throw new Error('You are not a premium user. Visit https://cryptocontrol.io/about/premium for more info');\n        if (response.status !== 200) throw new Error('Bad response from the CryptoControl server');\n        return response.json();\n      });\n    };\n\n    CryptoControlApi.prototype.enableSentiment = function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          this.sentimentEnabled = true;\n          return [2];\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopNews = function (language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch('/news', {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestNews = function (language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch('/news', {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopNewsByCategory = function (language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/news/category\", {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopNewsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/news/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestNewsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/news/coin/\" + coinSlug, {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopNewsByCoinCategory = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/news/coin/\" + coinSlug + \"/category\", {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopTweeetsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/tweets/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestTweetsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/tweets/coin/\" + coinSlug, {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopRedditPostsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/reddit/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestRedditPostsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/reddit/coin/\" + coinSlug, {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopFeedByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/feed/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestFeedByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/feed/coin/\" + coinSlug, {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getTopItemsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/all/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getLatestItemsByCoin = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/all/coin/\" + coinSlug, {\n                latest: true,\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    CryptoControlApi.prototype.getCoinDetails = function (coinSlug, language) {\n      if (language === void 0) {\n        language = 'en';\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, this._fetch(\"/details/coin/\" + coinSlug, {\n                language: language\n              })];\n\n            case 1:\n              return [2, _a.sent()];\n          }\n        });\n      });\n    };\n\n    return CryptoControlApi;\n  }();\n\n  return CryptoControlApi;\n};\n\nexports.generateAPI = generateAPI;","map":null,"metadata":{},"sourceType":"script"}